{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GuessIt","text":"<p>GuessIt is a python library that extracts as much information as possible from a video filename.</p> <p>It has a very powerful matcher that allows to guess properties from a video using its filename only. This matcher works with both movies and tv shows episodes.</p> <p>For example, GuessIt can do the following:</p> <pre><code>$ guessit \"Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi\"\nFor: Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi\nGuessIt found: {\n\"title\": \"Treme\",\n    \"season\": 1,\n    \"episode\": 3,\n    \"episode_title\": \"Right Place, Wrong Time\",\n    \"source\": \"HDTV\",\n    \"video_codec\": \"Xvid\",\n    \"release_group\": \"NoTV\",\n    \"container\": \"avi\",\n    \"mimetype\": \"video/x-msvideo\",\n    \"type\": \"episode\"\n}\n</code></pre>"},{"location":"#migration-note","title":"Migration note","text":"<p>In GuessIt 3, some properties and values were renamed in order to keep consistency and to be more intuitive.</p> <p>To migrate from guessit <code>2.x</code> to <code>3.x</code>, please read migration2to3.md.</p> <p>To migrate from guessit <code>0.x</code> or <code>1.x</code> to <code>guessit 2.x</code>, please read migration.md.</p>"},{"location":"#install","title":"Install","text":"<p>Installing GuessIt is simple with pip:</p> <pre><code>pip install guessit\n</code></pre> <p>You can also install GuessIt from sources</p>"},{"location":"#usage","title":"Usage","text":"<p>GuessIt can be used from command line:</p> <pre><code>usage: guessit [-h] [-t TYPE] [-n] [-Y] [-D] [-L ALLOWED_LANGUAGES]\n               [-C ALLOWED_COUNTRIES] [-E] [-T EXPECTED_TITLE]\n               [-G EXPECTED_GROUP] [--includes INCLUDES] [--excludes EXCLUDES]\n               [-f INPUT_FILE] [-v] [-P SHOW_PROPERTY] [-a] [-s] [-l] [-j]\n               [-y] [-i] [-c CONFIG] [--no-user-config] [--no-default-config]\n               [-p] [-V] [--version]\n               [filename [filename ...]]\n\npositional arguments:\n  filename              Filename or release name to guess\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nNaming:\n  -t TYPE, --type TYPE  The suggested file type: movie, episode. If undefined,\n                        type will be guessed.\n  -n, --name-only       Parse files as name only, considering \"/\" and \"\\\" like\n                        other separators.\n  -Y, --date-year-first\n                        If short date is found, consider the first digits as\n                        the year.\n  -D, --date-day-first  If short date is found, consider the second digits as\n                        the day.\n  -L ALLOWED_LANGUAGES, --allowed-languages ALLOWED_LANGUAGES\n                        Allowed language (can be used multiple times)\n  -C ALLOWED_COUNTRIES, --allowed-countries ALLOWED_COUNTRIES\n                        Allowed country (can be used multiple times)\n  -E, --episode-prefer-number\n                        Guess \"serie.213.avi\" as the episode 213. Without this\n                        option, it will be guessed as season 2, episode 13\n  -T EXPECTED_TITLE, --expected-title EXPECTED_TITLE\n                        Expected title to parse (can be used multiple times)\n  -G EXPECTED_GROUP, --expected-group EXPECTED_GROUP\n                        Expected release group (can be used multiple times)\n  --includes INCLUDES   List of properties to be detected\n  --excludes EXCLUDES   List of properties to be ignored\n\nInput:\n  -f INPUT_FILE, --input-file INPUT_FILE\n                        Read filenames from an input text file. File should\n                        use UTF-8 charset.\n\nOutput:\n  -v, --verbose         Display debug output\n  -P SHOW_PROPERTY, --show-property SHOW_PROPERTY\n                        Display the value of a single property (title, series,\n                        video_codec, year, ...)\n  -a, --advanced        Display advanced information for filename guesses, as\n                        json output\n  -s, --single-value    Keep only first value found for each property\n  -l, --enforce-list    Wrap each found value in a list even when property has\n                        a single value\n  -j, --json            Display information for filename guesses as json\n                        output\n  -y, --yaml            Display information for filename guesses as yaml\n                        output\n  -i, --output-input-string\n                        Add input_string property in the output\n\nConfiguration:\n  -c CONFIG, --config CONFIG\n                        Filepath to configuration file. Configuration file\n                        contains the same options as those from command line\n                        options, but option names have \"-\" characters replaced\n                        with \"_\". This configuration will be merged with\n                        default and user configuration files.\n  --no-user-config      Disable user configuration. If not defined, guessit\n                        tries to read configuration files at\n                        ~/.guessit/options.(json|yml|yaml) and\n                        ~/.config/guessit/options.(json|yml|yaml)\n  --no-default-config   Disable default configuration. This should be done\n                        only if you are providing a full configuration through\n                        user configuration or --config option. If no\n                        \"advanced_config\" is provided by another configuration\n                        file, it will still be loaded from default\n                        configuration.\n\nInformation:\n  -p, --properties      Display properties that can be guessed.\n  -V, --values          Display property values that can be guessed.\n  --version             Display the guessit version.\n</code></pre> <p>It can also be used as a python module:</p> <pre><code>&gt;&gt;&gt; from guessit import guessit\n&gt;&gt;&gt; guessit('Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi')\nMatchesDict([('title', 'Treme'), ('season', 1), ('episode', 3), ('episode_title', 'Right Place, Wrong Time'), ('source', 'HDTV'), ('video_codec', 'Xvid'), ('release_group', 'NoTV'), ('container', 'avi'), ('mimetype', 'video/x-msvideo'), ('type', 'episode')])\n</code></pre> <p><code>MatchesDict</code> is a dict that keeps matches ordering.</p> <p>Command line options can be given as dict or string to the second argument.</p>"},{"location":"#configuration","title":"Configuration","text":"<p>Find more about Guessit configuration at configuration page.</p>"},{"location":"#rest-api","title":"REST API","text":"<p>A REST API will be available soon ...</p> <p>Sources are available in a dedicated guessit-rest repository.</p>"},{"location":"#support","title":"Support","text":"<p>This project is hosted on GitHub. Feel free to open an issue if you think you have found a bug or something is missing in guessit.</p> <p>GuessIt relies on Rebulk project for pattern and rules registration.</p>"},{"location":"#license","title":"License","text":"<p>GuessIt is licensed under the LGPLv3 license.</p>"},{"location":"configuration/","title":"Configuration files","text":"<p>Guessit supports configuration through configuration files.</p> <p>Default configuration file is bundled inside guessit package from config/options.json file.</p> <p>It is possible to disable the default configuration with <code>--no-default-config</code> option, but you have then to provide a full configuration file based on the default one.</p> <p>Configuration files are loaded from the following paths:</p> <ul> <li><code>~/.guessit/options.(json|yml|yaml)</code></li> <li><code>~/.config/guessit/options.(json|yml|yaml)</code></li> </ul> <p>It is also possible to disable those user configuration files with <code>no-user-config</code> option.</p> <p>Additional configuration files can be included using the <code>-c</code>/<code>--config</code> option.</p> <p>As many configuration files can be involved, they are deeply merged to keep all values inside the effective configuration.</p>"},{"location":"configuration/#advanced-configuration","title":"Advanced configuration","text":"<p>Configuration files contains all options available through the command line, but also an additional one named <code>advanced_config</code>.</p> <p>This advanced configuration contains all internal parameters and they are exposed to help you tweaking guessit to better fit your needs.</p> <p>If no <code>advanced_config</code> is declared through all effective configuration files, the default one will be used even when <code>--no-default-config</code> is used.</p> <p>We're willing to keep it backwards compatible, but in order to enhance Guessit, these parameters might change without prior notice.</p>"},{"location":"migration/","title":"Migration","text":"<p>Guessit 2 has been rewritten from scratch. You can find in this file all information required to perform a migration from previous version <code>0.x</code> or <code>1.x</code>.</p>"},{"location":"migration/#api","title":"API","text":"<p><code>guess_video_info</code>, <code>guess_movie_info</code> and <code>guess_episode_info</code> have been removed in favor of a unique function <code>guessit</code>.</p> <p>Example:</p> <pre><code>&gt;&gt;&gt; from guessit import guessit\n&gt;&gt;&gt; guessit('Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi')\nMatchesDict([('title', 'Treme'), ('season', 1), ('episode', 3), ('episode_title', 'Right Place, Wrong Time'), ('format', 'HDTV'), ('video_codec', 'XviD'), ('release_group', 'NoTV'), ('container', 'avi'), ('mimetype', 'video/x-msvideo'), ('type', 'episode')])\n</code></pre> <p><code>MatchesDict</code> is a dict that keeps matches ordering.</p> <p>Command line options can be given as dict or string to the second argument.</p>"},{"location":"migration/#properties","title":"Properties","text":"<p>Some properties have been renamed.</p> <ul> <li><code>series</code> is now <code>title</code>.</li> <li><code>title</code> is now <code>episode_title</code> (for <code>episode</code> <code>type</code> only).</li> <li><code>episodeNumber</code> is now <code>episode</code>.</li> <li><code>bonusNumber</code> is now <code>bonus</code></li> <li><code>filmNumber</code> is now <code>film</code></li> <li><code>cdNumber</code> is now <code>cd</code> and <code>cdNumberTotal</code> is now <code>cd_count</code></li> <li><code>idNumber</code> is now <code>uuid</code></li> </ul> <p><code>episodeList</code> and <code>partList</code> have been removed. <code>episode_number</code> and <code>part</code> properties that can now contains an <code>int</code> or a <code>list[int]</code>.</p> <p>All info <code>type</code>, like <code>seriesinfo</code> and <code>movieinfo</code>. You can check directly <code>nfo</code>\u00a0value in <code>container</code> property.</p> <p>All <code>camelCase</code> properties have been renamed to <code>underscore_case</code>.</p> <ul> <li><code>releaseGroup</code> is now <code>release_group</code></li> <li><code>episodeCount</code> is now <code>episode_count</code></li> <li><code>episodeDetails</code> is now <code>episode_details</code></li> <li><code>episodeFormat</code> is now <code>episode_format</code></li> <li><code>screenSize</code> is now <code>screen_size</code></li> <li><code>videoCodec</code> is now <code>video_codec</code></li> <li><code>videoProfile</code> is now <code>video_profile</code></li> <li><code>videoApi</code> is now <code>video_api</code></li> <li><code>audioChannels</code> is now <code>audio_channels</code></li> <li><code>audioCodec</code> is now <code>audio_codec</code></li> <li><code>audioProfile</code> is now <code>audio_profile</code></li> <li><code>subtitleLanguage</code> is now <code>subtitle_language</code></li> <li><code>bonusTitle</code> is now <code>bonus_title</code></li> <li><code>properCount</code> is now <code>proper_count</code></li> </ul>"},{"location":"migration/#options","title":"Options","text":"<p>Some options have been removed.</p> <ul> <li> <p><code>-X DISABLED_TRANSFORMERS</code>, <code>-s, --transformers</code></p> <p>There's no transformer anymore.</p> </li> <li> <p><code>-S EXPECTED_SERIES</code></p> <p>As <code>series</code> was renamed to <code>title</code>, use <code>-T EXPECTED_TITLE</code> instead.</p> </li> <li> <p><code>-G EXPECTED_GROUP</code></p> <p>GuessIt is now better to guess release group, so this option has been removed.</p> </li> <li> <p><code>-d, --demo</code></p> <p>Probably not that useful.</p> </li> <li> <p><code>-i INFO, --info INFO</code></p> <p>Features related to this option have been removed.</p> </li> <li> <p><code>-c, --split-camel</code>, <code>-u, --unidentified</code>, <code>-b, --bug</code></p> <p>Will be back soon... (work in progress)</p> </li> </ul> <p>Other GuessIt <code>1.x</code> options have been kept.</p>"},{"location":"migration/#output","title":"Output","text":"<p>Output produced by <code>guessit</code> api function is now an instance of OrderedDict. Property values are automatically ordered based on filename, and you can still use this output as a default python <code>dict</code>.</p> <p>If multiple values are available for a property, value in the dict will be a <code>list</code> instance.</p> <p><code>country</code> 2-letter code is not added to the title anymore. As <code>country</code> is added to the returned guess dict, it's up to the user to edit the guessed title.</p> <p>Advanced display option (<code>-a, --advanced</code>) output is also changed. It now list <code>Match</code> objects from Rebulk, and may display duplicates that would have been merged in standard output.:</p> <pre><code>$ guessit \"Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi\" -a\nFor: Treme.1x03.Right.Place,.Wrong.Time.HDTV.XviD-NoTV.avi\nGuessIt found: {\n\"title\": {\n\"value\": \"Treme\",\n        \"raw\": \"Treme.\",\n        \"start\": 0,\n        \"end\": 6\n},\n    \"season\": {\n\"value\": 1,\n        \"raw\": \"1\",\n        \"start\": 6,\n        \"end\": 7\n},\n    \"episode\": {\n\"value\": 3,\n        \"raw\": \"03\",\n        \"start\": 8,\n        \"end\": 10\n},\n    \"episode_title\": {\n\"value\": \"Right Place, Wrong Time\",\n        \"raw\": \".Right.Place,.Wrong.Time.\",\n        \"start\": 10,\n        \"end\": 35\n},\n    \"format\": {\n\"value\": \"HDTV\",\n        \"raw\": \"HDTV\",\n        \"start\": 35,\n        \"end\": 39\n},\n    \"video_codec\": {\n\"value\": \"XviD\",\n        \"raw\": \"XviD\",\n        \"start\": 40,\n        \"end\": 44\n},\n    \"release_group\": {\n\"value\": \"NoTV\",\n        \"raw\": \"-NoTV\",\n        \"start\": 44,\n        \"end\": 49\n},\n    \"container\": {\n\"value\": \"avi\",\n        \"raw\": \".avi\",\n        \"start\": 49,\n        \"end\": 53\n},\n    \"mimetype\": {\n\"value\": \"video/x-msvideo\",\n        \"start\": 53,\n        \"end\": 53\n},\n    \"type\": {\n\"value\": \"episode\",\n        \"start\": 53,\n        \"end\": 53\n}\n}\n</code></pre>"},{"location":"migration2to3/","title":"Migration","text":"<p>Guessit 3 has introduced breaking changes from previous versions. You can find in this file all information required to perform a migration from previous version <code>2.x</code>.</p>"},{"location":"migration2to3/#api","title":"API","text":"<p>No changes.</p>"},{"location":"migration2to3/#properties","title":"Properties","text":"<p>Some properties have been renamed.</p> <ul> <li><code>format</code> is now <code>source</code>.</li> </ul>"},{"location":"migration2to3/#values","title":"Values","text":"<p>The major changes in GuessIt 3 are around the values. Values were renamed in order to keep consistency and to be more intuitive. Acronyms are uppercase (e.g.: <code>HDTV</code>). Names follow the official name (e.g.: <code>Blu-ray</code>). Words have only the first letter capitalized (e.g.: <code>Camera</code>) except prepositions (e.g.: <code>on</code>) which are all lowercase.</p> <p>The following values were changed:</p>"},{"location":"migration2to3/#source-former-format-property","title":"<code>source</code> (former <code>format</code> property)","text":"<ul> <li><code>Cam</code> is now <code>Camera</code> or <code>HD Camera</code></li> <li><code>Telesync</code> is now <code>Telesync</code> or <code>HD Telesync</code></li> <li><code>PPV</code> is now <code>Pay-per-view</code></li> <li><code>DVB</code> is now <code>Digital TV</code></li> <li><code>VOD</code> is now <code>Video on Demand</code></li> <li><code>WEBRip</code> is now <code>Web</code> with additional property <code>other: Rip</code></li> <li><code>WEB-DL</code> is now <code>Web</code></li> <li><code>AHDTV</code> is now <code>Analog HDTV</code></li> <li><code>UHDTV</code> is now <code>Ultra HDTV</code></li> <li><code>HDTC</code> is now <code>HD Telecine</code></li> </ul>"},{"location":"migration2to3/#screen_size","title":"<code>screen_size</code>","text":"<ul> <li><code>360i</code> was added.</li> <li><code>480i</code> was added.</li> <li><code>576i</code> was added.</li> <li><code>900i</code> was added.</li> <li><code>4K</code> is now <code>2160p</code></li> <li><code>4320p</code> was added.</li> </ul>"},{"location":"migration2to3/#video_codec","title":"<code>video_codec</code>","text":"<ul> <li><code>h264</code> is now <code>H.264</code></li> <li><code>h265</code> is now <code>H.265</code></li> <li><code>Mpeg2</code> is now <code>MPEG-2</code></li> <li><code>Real</code> is now <code>RealVideo</code></li> <li><code>XviD</code> is now <code>Xvid</code></li> </ul>"},{"location":"migration2to3/#video_profile","title":"<code>video_profile</code>","text":"<ul> <li><code>BP</code> is now <code>Baseline</code>.</li> <li><code>HP</code> is now <code>High</code>.</li> <li><code>XP</code> is now <code>Extended</code>.</li> <li><code>MP</code> is now <code>Main</code>.</li> <li><code>Hi422P</code> is now <code>High 4:2:2</code>.</li> <li><code>Hi444PP</code> is now <code>High 4:4:4 Predictive</code>.</li> <li><code>High 10</code> was added.</li> <li><code>8bit</code> was removed. <code>8bit</code> is detected as <code>color_depth: 8-bit</code></li> <li><code>10bit</code> was removed. <code>10bit</code> is detected as <code>color_depth: 10-bit</code></li> </ul>"},{"location":"migration2to3/#audio_codec","title":"<code>audio_codec</code>","text":"<ul> <li><code>DTS-HD</code> was added.</li> <li><code>AC3</code> is now <code>Dolby Digital</code></li> <li><code>EAC3</code> is now <code>Dolby Digital Plus</code></li> <li><code>TrueHD</code> is now <code>Dolby TrueHD</code></li> <li><code>DolbyAtmos</code> is now <code>Dolby Atmos</code>.</li> </ul>"},{"location":"migration2to3/#audio_profile","title":"<code>audio_profile</code>","text":"<ul> <li><code>HE</code> is now <code>High Efficiency</code>.</li> <li><code>LC</code> is now <code>Low Complexity</code>.</li> <li><code>HQ</code> is now <code>High Quality</code>.</li> <li><code>HDMA</code> is now <code>Master Audio</code>.</li> </ul>"},{"location":"migration2to3/#edition","title":"<code>edition</code>","text":"<ul> <li><code>Collector Edition</code> is now <code>Collector</code></li> <li><code>Special Edition</code> is now <code>Special</code></li> <li><code>Criterion Edition</code> is now <code>Criterion</code></li> <li><code>Deluxe Edition</code> is now <code>Deluxe</code></li> <li><code>Limited Edition</code> is now <code>Limited</code></li> <li><code>Theatrical Edition</code> is now <code>Theatrical</code></li> <li><code>Director's Definitive Cut</code> was added.</li> </ul>"},{"location":"migration2to3/#episode_details","title":"<code>episode_details</code>","text":"<ul> <li><code>Oav</code> and <code>Ova</code> were removed. They are now <code>other: Original Animated Video</code></li> <li><code>Omake</code> is now <code>Extras</code></li> <li><code>Final</code> was added.</li> </ul>"},{"location":"migration2to3/#other","title":"<code>other</code>","text":"<ul> <li><code>Rip</code> was added. E.g.: <code>DVDRip</code> will output <code>other: Rip</code></li> <li><code>DDC</code> was removed. <code>DDC</code> is now <code>edition: Director's Definitive Cut</code></li> <li><code>CC</code> was removed. <code>CC</code> is now <code>edition: Criterion</code></li> <li><code>FINAL</code> was removed. <code>FINAL</code> is now <code>episode_details: Final</code></li> <li><code>Original Animated Video</code> was added.</li> <li><code>OV</code> is now <code>Original Video</code></li> <li><code>AudioFix</code> is now <code>Audio Fixed</code></li> <li><code>SyncFix</code> is now <code>Sync Fixed</code></li> <li><code>DualAudio</code> is now <code>Dual Audio</code></li> <li><code>Fansub</code> is now <code>Fan Subtitled</code></li> <li><code>Fastsub</code> is now <code>Fast Subtitled</code></li> <li><code>FullHD</code> is now <code>Full HD</code></li> <li><code>UltraHD</code> is now <code>Ultra HD</code></li> <li><code>mHD</code> and <code>HDLight</code> are now <code>Micro HD</code></li> <li><code>HQ</code> is now <code>High Quality</code></li> <li><code>HR</code> is now <code>High Resolution</code></li> <li><code>LD</code> is now <code>Line Dubbed</code></li> <li><code>MD</code> is now <code>Mic Dubbed</code></li> <li><code>Low Definition</code> was added.</li> <li><code>LiNE</code> is now <code>Line Audio</code></li> <li><code>R5</code> is now <code>Region 5</code></li> <li><code>Region C</code> was added.</li> <li><code>ReEncoded</code> is now <code>Reencoded</code></li> <li><code>WideScreen</code> is now <code>Widescreen</code></li> </ul>"},{"location":"properties/","title":"Properties","text":"<p>Guessed values are cleaned up and given in a readable format which may not match exactly the raw filename.</p> <p>So, for instance,</p> <ul> <li><code>DVDSCR</code> will be guessed as <code>source</code> = <code>DVD</code> + <code>other</code> = <code>Screener</code></li> <li><code>1920x1080</code> will be guessed as <code>screen_size</code> = <code>1080p</code></li> <li><code>DD5.1</code> will be guessed as <code>audio_codec</code> = <code>Dolby Digital</code> + <code>audio_channels</code> = <code>5.1</code></li> </ul>"},{"location":"properties/#main-properties","title":"Main properties","text":"<ul> <li> <p>type</p> <p>Type of the file.</p> <ul> <li><code>episode</code>, <code>movie</code></li> <li>title</li> </ul> <p>Title of movie or episode.</p> </li> <li> <p>alternative_title</p> <p>Other titles found for movie.</p> </li> <li> <p>container</p> <p>Container of the file.</p> <ul> <li><code>3g2</code>, <code>3gp</code>, <code>3gp2</code>, <code>asf</code>, <code>ass</code>, <code>avi</code>, <code>divx</code>, <code>flv</code>, <code>idx</code>, <code>iso</code>, <code>m4v</code>, <code>mk2</code>, <code>mk3d</code>, <code>mkv</code>, <code>mka</code>, <code>mov</code>, <code>mp4</code>, <code>mp4a</code>, <code>mpeg</code>, <code>mpg</code>, <code>nfo</code>, <code>nzb</code>, <code>ogg</code>, <code>ogm</code>, <code>ogv</code>, <code>qt</code>, <code>ra</code>, <code>ram</code>, <code>rm</code>, <code>srt</code>, <code>ssa</code>, <code>sub</code>, <code>torrent</code>, <code>ts</code>, <code>vob</code>, <code>wav</code>, <code>webm</code>, <code>wma</code>, <code>wmv</code></li> <li>mimetype</li> </ul> <p>Mime type of the related container. Guessed values may vary based on OS native support of mime type.</p> </li> <li> <p>date</p> <p>Date found in filename.</p> </li> <li> <p>year</p> <p>Year of movie (or episode).</p> </li> <li> <p>week</p> <p>Week number, from 1 to 52, of episode.</p> </li> <li> <p>release_group</p> <p>Name of (non)scene group that released the file.</p> </li> <li> <p>website</p> <p>Name of website contained in the filename.</p> </li> <li> <p>streaming_service</p> <p>Name of the streaming service.</p> <ul> <li><code>A&amp;E</code>, <code>ABC</code>, <code>ABC Australia</code>, <code>Adult Swim</code>, <code>Al Jazeera English</code>, <code>AMC</code>, <code>America's Test Kitchen</code>, <code>Amazon Prime</code>, <code>Animal Planet</code>, <code>AnimeLab</code>, <code>AOL</code>, <code>AppleTV</code>, <code>ARD</code>, <code>BBC iPlayer</code>, <code>BravoTV</code>, <code>Canal+</code>, <code>Cartoon Network</code>, <code>CBC</code>, <code>CBS</code>, <code>Channel 4</code>, <code>CHRGD</code>, <code>Cinemax</code>, <code>CNBC</code>, <code>Comedy Central</code>, <code>Comedians in Cars Getting Coffee</code>, <code>Country Music Television</code>, <code>Crackle</code>, <code>Crunchy Roll</code>, <code>CSpan</code>, <code>CTV</code>, <code>CuriosityStream</code>, <code>CWSeed</code>, <code>Daisuki</code>, <code>DC Universe</code>, <code>Deadhouse Films</code>, <code>DramaFever</code>, <code>Digiturk Diledigin Yerde</code>, <code>Discovery</code>, <code>DIY Network</code>, <code>Disney</code>, <code>Doc Club</code>, <code>DPlay</code>, <code>E!</code>, <code>ePix</code>, <code>El Trece</code>, <code>ESPN</code>, <code>Esquire</code>, <code>Family</code>, <code>Family Jr</code>, <code>Food Network</code>, <code>Fox</code>, <code>Freeform</code>, <code>FYI Network</code>, <code>Global</code>, <code>GloboSat Play</code>, <code>Hallmark</code>, <code>HBO Go</code>, <code>HBO Max</code>, <code>HGTV</code>, <code>History</code>, <code>Hulu</code>, <code>Investigation Discovery</code>, <code>IFC</code>, <code>iTunes</code>, <code>ITV</code>, <code>Knowledge Network</code>, <code>Lifetime</code>, <code>Motor Trend OnDemand</code>, <code>MBC</code>, <code>MSNBC</code>, <code>MTV</code>, <code>National Geographic</code>, <code>NBA TV</code>, <code>NBC</code>, <code>Netflix</code>, <code>NFL</code>, <code>NFL Now</code>, <code>NHL GameCenter</code>, <code>Nickelodeon</code>, <code>Norsk Rikskringkasting</code>, <code>OnDemandKorea</code>, <code>PBS</code>, <code>PBS Kids</code>, <code>Playstation Network</code>, <code>Pluzz</code>, <code>RTE One</code>, <code>SBS (AU)</code>, <code>SeeSo</code>, <code>Shomi</code>, <code>Showtime</code>, <code>Spike</code>, <code>Spike TV</code>, <code>Sportsnet</code>, <code>Sprout</code>, <code>Stan</code>, <code>Starz</code>, <code>Sveriges Television</code>, <code>SwearNet</code>, <code>Syfy</code>, <code>TBS</code>, <code>TFou</code>, <code>The CW</code>, <code>TLC</code>, <code>TubiTV</code>, <code>TV3 Ireland</code>, <code>TV4 Sweeden</code>, <code>TVING</code>, <code>TV Land</code>, <code>UFC</code>, <code>UKTV</code>, <code>Univision</code>, <code>USA Network</code>, <code>Velocity</code>, <code>VH1</code>, <code>Viceland</code>, <code>Viki</code>, <code>Vimeo</code>, <code>VRV</code>, <code>W Network</code>, <code>WatchMe</code>, <code>WWE Network</code>, <code>Xbox Video</code>, <code>Yahoo</code>, <code>YouTube Red</code>, <code>ZDF</code></li> </ul> </li> </ul>"},{"location":"properties/#episode-properties","title":"Episode properties","text":"<ul> <li> <p>season</p> <p>Season number. (Can be a list if several are found)</p> </li> <li> <p>episode</p> <p>Episode number. (Can be a list if several are found)</p> </li> <li> <p>disc</p> <p>Disc number. (Can be a list if several are found)</p> </li> <li> <p>episode_count</p> <p>Total number of episodes.</p> </li> <li> <p>season_count</p> <p>Total number of seasons.</p> </li> <li> <p>episode_details</p> <p>Some details about the episode.</p> <ul> <li><code>Final</code>, <code>Pilot</code>, <code>Special</code>, <code>Unaired</code></li> <li>episode_format</li> </ul> <p>Episode format of the series.</p> <ul> <li><code>Minisode</code></li> <li>part</li> </ul> <p>Part number of the video. (Can be a list if several are found)</p> </li> <li> <p>version</p> <p>Version of the episode.</p> <ul> <li>In anime fansub scene, new versions are released with tag <code>&lt;episode&gt;v[0-9]</code>.</li> </ul> </li> </ul>"},{"location":"properties/#video-properties","title":"Video properties","text":"<ul> <li> <p>source</p> <p>Source of the release</p> <ul> <li><code>Analog HDTV</code>, <code>Blu-ray</code>, <code>Camera</code>, <code>Digital Master</code>, <code>Digital TV</code>, <code>DVD</code>, <code>HD Camera</code>, <code>HD Telecine</code>, <code>HD Telesync</code>, <code>HD-DVD</code>, <code>HDTV</code>, <code>Pay-per-view</code>, <code>Satellite</code>, <code>Telecine</code>, <code>Telesync</code>, <code>TV</code>, <code>Ultra HD Blu-ray</code>, <code>Ultra HDTV</code>, <code>VHS</code>, <code>Video on Demand</code>, <code>Web</code>, <code>Workprint</code></li> <li>screen_size</li> </ul> <p>Resolution of video.</p> <ul> <li><code>&lt;width&gt;x&lt;height&gt;</code>, <code>360i</code>, <code>360p</code>, <code>368p</code>, <code>480i</code>, <code>480p</code>, <code>540i</code>, <code>540p</code>, <code>576i</code>, <code>576p</code>, <code>720p</code>, <code>900i</code>, <code>900p</code>, <code>1080i</code>, <code>1080p</code>, <code>1440p</code>, <code>2160p</code>, <code>4320p</code></li> <li>aspect_ratio</li> </ul> <p>Aspect ratio of video. Calculated using width and height from <code>screen_size</code></p> </li> <li> <p>video_codec</p> <p>Codec used for video.</p> <ul> <li><code>DivX</code>, <code>H.263</code>, <code>H.264</code>, <code>H.265</code>, <code>MPEG-2</code>, <code>RealVideo</code>, <code>VP7</code>, <code>VP8</code>, <code>VP9</code>,<code>Xvid</code></li> <li>video_profile</li> </ul> <p>Codec profile used for video.</p> <ul> <li><code>Baseline</code>, <code>High</code>, <code>High 10</code>, <code>High 4:2:2</code>, <code>High 4:4:4 Predictive</code>, <code>Main</code>, <code>Extended</code>, <code>Scalable Video Coding</code>, <code>Advanced Video Codec High Definition</code>, <code>High Efficiency Video Coding</code></li> </ul> </li> <li> <p>color_depth</p> <p>Bit depth used for video. -   <code>8-bit</code>, <code>10-bit</code>, <code>12-bit</code> -   video_api</p> <p>API used for the video.</p> <ul> <li><code>DXVA</code></li> <li>video_bit_rate</li> </ul> <p>Video bit rate (Mbps). Examples: <code>25Mbps</code> (<code>&lt;BitRate [25Mbps]&gt;</code>), <code>40Mbps</code> (<code>&lt;BitRate [40Mbps]&gt;</code>).</p> <ul> <li><code>[&lt;guessit.BitRate&gt;]</code> (object has <code>magnitude</code> and <code>units</code>)</li> <li>frame_rate</li> </ul> <p>Video frame rate (frames per second). Examples: <code>25fps</code> (<code>&lt;FrameRate [25fps]&gt;</code>), <code>60fps</code> (<code>&lt;FrameRate [60fps]&gt;</code>).</p> <ul> <li><code>[&lt;guessit.FrameRate&gt;]</code> (object has <code>magnitude</code> and <code>units</code>)</li> </ul> </li> </ul>"},{"location":"properties/#audio-properties","title":"Audio properties","text":"<ul> <li> <p>audio_channels</p> <p>Number of channels for audio.</p> <ul> <li><code>1.0</code>, <code>2.0</code>, <code>5.1</code>, <code>7.1</code></li> <li>audio_codec</li> </ul> <p>Codec used for audio.</p> <ul> <li><code>AAC</code>, <code>Dolby Atmos</code>, <code>Dolby Digital</code>, <code>Dolby Digital Plus</code>, <code>Dolby TrueHD</code>, <code>DTS</code>, <code>FLAC</code>, <code>LPCM</code>, <code>MP2</code>, <code>MP3</code>, <code>Opus</code>, <code>PCM</code>, <code>Vorbis</code></li> <li>audio_profile</li> </ul> <p>The codec profile used for audio.</p> <ul> <li><code>Extended Surround</code>, <code>EX</code>, <code>High Efficiency</code>, <code>High Quality</code>, <code>High Resolution Audio</code>, <code>Low Complexity</code>, <code>Master Audio</code></li> <li>audio_bit_rate</li> </ul> <p>Audio bit rate (Kbps, Mbps). Examples: <code>448Kbps</code> (<code>&lt;BitRate [448Kbps]&gt;</code>), <code>1.5Mbps</code> (<code>&lt;BitRate [1.5Mbps]&gt;</code>).</p> <ul> <li><code>[&lt;guessit.BitRate&gt;]</code> (object has <code>magnitude</code> and <code>units</code>)</li> </ul> </li> </ul>"},{"location":"properties/#localization-properties","title":"Localization properties","text":"<ul> <li> <p>country</p> <p>Country(ies) of content. Often found in series, <code>Shameless (US)</code> for instance.</p> <ul> <li><code>[&lt;babelfish.Country&gt;]</code> (This class equals name and iso code)</li> <li>language</li> </ul> <p>Language(s) of the audio soundtrack.</p> <ul> <li><code>[&lt;babelfish.Language&gt;]</code> (This class equals name and iso code)</li> <li>subtitle_language</li> </ul> <p>Language(s) of the subtitles.</p> <ul> <li><code>[&lt;babelfish.Language&gt;]</code> (This class equals name and iso code)</li> </ul> </li> </ul>"},{"location":"properties/#other-properties","title":"Other properties","text":"<ul> <li> <p>bonus</p> <p>Bonus number.</p> </li> <li> <p>bonus_title</p> <p>Bonus title.</p> </li> <li> <p>cd</p> <p>CD number.</p> </li> <li> <p>cd_count</p> <p>Total count of CD.</p> </li> <li> <p>crc32</p> <p>CRC32 of the file.</p> </li> <li> <p>uuid</p> <p>Volume identifier (UUID).</p> </li> <li> <p>size</p> <p>Size (MB, GB, TB). Examples: <code>1.2GB</code> (<code>&lt;Size [1.2GB]&gt;</code>), <code>430MB</code> (<code>&lt;Size [430MB]&gt;</code>).</p> <ul> <li><code>[&lt;guessit.Size&gt;]</code> (object has <code>magnitude</code> and <code>units</code>)</li> <li>edition</li> </ul> <p>Edition of the movie.</p> <ul> <li><code>Alternative Cut</code>, <code>Collector</code>, <code>Criterion</code>, <code>Deluxe</code>, <code>Director's Cut</code>, <code>Director's Definitive Cut</code>, <code>Extended</code>, <code>Fan</code>, <code>Festival</code>, <code>IMAX</code>, <code>Remastered</code>, <code>Restored</code>, <code>Special</code>, <code>Limited</code>, <code>Theatrical</code>, <code>Ultimate</code>, <code>Uncensored</code>, <code>Uncut</code>, <code>Unrated</code></li> <li>film</li> </ul> <p>Film number of this movie.</p> </li> <li> <p>film_title</p> <p>Film title of this movie.</p> </li> <li> <p>film_series</p> <p>Film series of this movie.</p> </li> <li> <p>other</p> <p>Other property will appear under this property.</p> <ul> <li><code>2in1</code>, <code>3D</code>, <code>Audio Fixed</code>, <code>Bonus</code>, <code>BT.2020</code>, <code>Classic</code>, <code>Colorized</code>, <code>Complete</code>, <code>Converted</code>, <code>Documentary</code>, <code>Dolby Vision</code>, <code>Dual Audio</code>, <code>East Coast Feed</code>, <code>Extras</code>, <code>Fan Subtitled</code>, <code>Fast Subtitled</code>, <code>Full HD</code>, <code>Hardcoded Subtitles</code>, <code>HD</code>, <code>HDR10</code>, <code>High Frame Rate</code>, <code>Hybrid</code>, <code>Variable Frame Rate</code>, <code>High Quality</code>, <code>High Resolution</code>, <code>Internal</code>, <code>Line Dubbed</code>, <code>Line Audio</code>, <code>Mic Dubbed</code>, <code>Micro HD</code>, <code>Mux</code>, <code>NTSC</code>, <code>Obfuscated</code>, <code>Open Matte</code>, <code>Original Aspect Ratio</code>, <code>Original Video</code>, <code>PAL</code>, <code>Preair</code>, <code>Proof</code>, <code>Proper</code>, <code>PS Vita</code>, <code>Read NFO</code>, <code>Region 5</code>, <code>Region C</code>, <code>Reencoded</code>, <code>Remux</code>, <code>Repost</code>, <code>Retail</code>, <code>Rip</code>, <code>Sample</code>, <code>Screener</code>, <code>SECAM</code>, <code>Standard Dynamic Range</code>, <code>Straight to Video</code>, <code>Sync Fixed</code>, <code>Trailer</code>, <code>Ultra HD</code>, <code>Upscaled</code>, <code>West Coast Feed</code>, <code>Widescreen</code>, <code>XXX</code></li> </ul> </li> </ul>"},{"location":"sources/","title":"Getting the source code","text":"<p>GuessIt is actively developed on GitHub.</p> <p>You can either clone the public repository:</p> <pre><code>$ git clone https://github.com/guessit-io/guessit.git\n</code></pre> <p>Download the tarball:</p> <pre><code>$ curl -L https://github.com/guessit-io/guessit/tarball/master -o guessit.tar.gz\n</code></pre> <p>Or download the zipball:</p> <pre><code>$ curl -L https://github.com/guessit-io/guessit/zipball/master -o guessit.zip\n</code></pre> <p>Once you have a copy of the source, you can embed it in your Python package, install it into your site-packages folder like that:</p> <pre><code>$ python setup.py install\n</code></pre> <p>or use it directly from the source folder for development:</p> <pre><code>$ python setup.py develop\n</code></pre>"}]}